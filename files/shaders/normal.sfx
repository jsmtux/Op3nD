<!DOCTYPE scene SYSTEM "shaders.dtd">
<shader>
	<version>
	330
	</version>
	<vertex>
		layout (location = 0) in vec3 Position;
		layout (location = 1) in vec2 TexCoord;
		layout (location = 2) in vec3 Normal;
		layout (location = 3) in ivec4 BoneIDs;
		layout (location = 4) in vec4 Weights;
		
		const int MAX_BONES=100;
		uniform mat4 gWVP;
		uniform mat4 gObjMat;
		uniform mat4 gBones[MAX_BONES];
		uniform bool animated;

		out vec2 TexCoord0;
		
		void main(){
			vec4 PosL;
			if(animated){
				mat4 BoneTransform = gBones[BoneIDs[0]] * Weights[0];
				BoneTransform     += gBones[BoneIDs[1]] * Weights[1];
				BoneTransform     += gBones[BoneIDs[2]] * Weights[2];
				BoneTransform     += gBones[BoneIDs[3]] * Weights[3];

				PosL      = gObjMat * BoneTransform * vec4(Position, 1.0);
			}else{
				PosL      = gObjMat * vec4(Position, 1.0);
			}
			gl_Position    = gWVP * PosL;
		    TexCoord0 = TexCoord;
		}
	</vertex>
	<fragment>
		in vec2 TexCoord0;
		
		out vec4 FragColor;
		
		uniform sampler2D gSampler;
		uniform unsigned int gObjectIndex;
		uniform unsigned int gMeshIndex;
		uniform vec2 offset = vec2(0.0, 0.0);
		uniform vec2 size = vec2(1.0, 1.0);
		
		void main()
		{
		    vec2 texture_coordinate = vec2(TexCoord0);
	        texture_coordinate += offset;
	        texture_coordinate *= size;
		    FragColor = texture2D(gSampler, texture_coordinate.xy);
		}
	</fragment>
</shader>
